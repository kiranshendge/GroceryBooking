generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id        Int        @id @default(autoincrement())
  name      String
  email     String     @unique
  password  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  role      Role       @default(USER)
  cartItems CartItem[]
  orders    Order[]

  @@map("users")
}

model Product {
  id          Int            @id @default(autoincrement())
  name        String
  description String
  price       Decimal
  tags        String
  quantity    Decimal
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  cartItems   CartItem[]
  orders      OrderProduct[]

  @@map("products")
}

model CartItem {
  id        Int      @id @default(autoincrement())
  userId    Int
  productId Int
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  product   Product  @relation(fields: [productId], references: [id])
  cartUser  user     @relation(fields: [userId], references: [id])

  @@index([productId], map: "cart_items_productId_fkey")
  @@index([userId], map: "cart_items_userId_fkey")
  @@map("cart_items")
}

model Order {
  id          Int              @id @default(autoincrement())
  userId      Int
  netAmount   Decimal
  status      OrderEventStatus @default(PENDING)
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  events      OrderEvent[]
  products    OrderProduct[]
  orderedUser user             @relation(fields: [userId], references: [id])

  @@index([userId], map: "orders_userId_fkey")
  @@map("orders")
}

model OrderProduct {
  id        Int      @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  order     Order    @relation(fields: [orderId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])

  @@index([orderId], map: "order_products_orderId_fkey")
  @@index([productId], map: "order_products_productId_fkey")
  @@map("order_products")
}

model OrderEvent {
  id        Int              @id @default(autoincrement())
  orderId   Int
  status    OrderEventStatus @default(PENDING)
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
  order     Order            @relation(fields: [orderId], references: [id])

  @@index([orderId], map: "order_events_orderId_fkey")
  @@map("order_events")
}

enum Role {
  ADMIN
  USER
}

enum OrderEventStatus {
  PENDING
  ACCEPTED
  CANCELLED
}
